- name: Get token from controll Plane for k8s.
  hosts: controllPlane
  become: yes
  gather_facts: no

  tasks:
          - name: Get token.
            become: yes
            shell:
                    cmd: kubeadm token list | cut -d " " -f 1 | grep "[^TOKEN]"
            register: token

          - name: test
            debug:
              var: token.stdout

- name: Install k8s for nodes.
  hosts: addWorker
  become: yes
  gather_facts: yes
  vars:
    master_node: "{{hostvars.KC1.ansible_host}}"
    token: "{{hostvars.KC1.token.stdout}}"

  tasks:
          - name: repository update.
            become: yes
            shell:
                    cmd: apt-get update

          - name: Memory swap off temporarily.
            become: yes
            shell:
                    cmd: 'swapoff -a'

          - name: Memory swap off parmanently.
            become: yes
            lineinfile:
                    dest: /etc/fstab
                    regexp: '^/swapfile'
                    state : present
                    line: '#swapfile    none    swap    sw      0       0'

          - name: change config of iptables.
            become: yes
            shell:
                    cmd: |
                        cat <<EOF > /etc/sysctl.d/k8s.conf
                        net.bridge.bridge-nf-call-ip6tables = 1
                        net.bridge.bridge-nf-call-iptables = 1
                        EOF
                        sysctl --system

          - name: Make iptables not to use nftables.
            become: yes
            shell:
                    cmd: apt-get install -y iptables arptables ebtables;
                         update-alternatives --set iptables /usr/sbin/iptables-legacy;
                         update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy;
                         update-alternatives --set arptables /usr/sbin/arptables-legacy;
                         update-alternatives --set ebtables /usr/sbin/ebtables-legacy;

          - name: Open necessary port.
            become: yes
            shell:
                    cmd: iptables -A INPUT -p tcp --dport 10250 -j ACCEPT;
                         iptables -A INPUT -p tcp --dport 30000:32767 -j ACCEPT;

          - name: Change necessary settings for install container runtime.
            become: yes
            shell:
                    cmd: |
                            cat > /etc/modules-load.d/containerd.conf <<EOF
                            overlay
                            br_netfilter
                            EOF
                            modprobe overlay
                            modprobe br_netfilter
                            cat > /etc/sysctl.d/99-kubernetes-cri.conf <<EOF
                            net.bridge.bridge-nf-call-iptables = 1
                            net.ipv4.ip_forward = 1
                            net.bridge.bridge-nf.call-ip6tables = 1
                            EOF
                            sysctl --system


          - name: Install container runtime.
            become: yes
            shell:
                    cmd: apt-get update && apt-get install -y apt-transport-https ca-certificates curl software-properties-common;
                         curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -;
                         add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable";
                         apt-get update && apt-get install -y containerd.io;
                         mkdir -p /etc/containerd;
                         containerd config default | sudo tee /etc/containerd/config.toml;
                         systemctl restart containerd;

          - name: Install kubeadm, kubelet, kubectl
            become: yes
            shell:
                    cmd: |
                            apt-get update && apt-get install -y apt-transport-https curl
                            curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
                            cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
                            deb https://apt.kubernetes.io/ kubernetes-xenial main
                            EOF
                            apt-get update
                            apt-get install -y kubelet kubeadm kubectl
                            apt-mark hold kubelet kubeadm kubectl

         
          - name: Join k8s cluster.
            become: yes
            shell:
                    cmd: kubeadm join {{master_node}}:6443 --token {{ token}} --discovery-token-unsafe-skip-ca-verification
          
          - name: Install nvidia-container-runtime.
            become: yes
            shell:
                    cmd: |
                      curl -s -L https://nvidia.github.io/nvidia-container-runtime/gpgkey | sudo apt-key add -
                      distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
                      curl -s -L https://nvidia.github.io/nvidia-container-runtime/$distribution/nvidia-container-runtime.list | sudo tee /etc/apt/sources.list.d/nvidia-container-runtime.list
                      sudo apt-get update -y
                      apt-get install -y nvidia-container-runtime
          
          - name: Configurate containerd
            become: yes
            copy:
                    src: files/config.toml
                    dest: /etc/containerd/config.toml
                    mode: 0644

          - name: Restart containerd.
            become: yes
            shell:
                    cmd: systemctl restart containerd


